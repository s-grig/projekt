os:
  - linux
  #- osx

language: cpp

dist: bionic

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - sourceline: "ppa:beineri/opt-qt-5.14.1-bionic"
    packages:
      - gcc-7
      - g++-7
      - qt514-meta-minimal
      - qt514svg
      - qt514imageformats
      - qt514tools
      - cmake-data
      - tesseract-ocr
      
      
     
  
before_install:
     - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update ;
      brew install qt5 cmake ;
      brew link --force qt ;
       fi

script:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export CC=gcc-7 ;
      export CXX=g++-7 ;
      source /opt/qt514/bin/qt514-env.sh ;
      fi
    - cmake --version
    - qmake --version
    - tesseract --version
    - echo "$HOME"
  # Check versions of gcc, g++ and cmake
  #  - gcc -v && g++ -v && cmake --version
  # Run your build commands next

   # - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
   # - sudo apt-get update -qq
   # - sudo apt-get install -qq libqt5webkit5-dev qtdeclarative5-dev -y
   # - export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake
# #- pkg-config --cflags --libs tesseract
   # - sudo apt install qt5-default
    - sudo apt-get install libgtk2.0-dev -y
    - sudo apt-get install tree
   
    - sudo apt-get install autoconf automake libtool
 #  - sudo apt-get install pkg-config
    - sudo apt-get install libpng-dev
    - sudo apt-get install libjpeg8-dev
    - sudo apt-get install libtiff5-dev
    - sudo apt-get install zlib1g-dev
    - sudo apt-get install libtool-bin
   #################### SFML #####################
    - sudo apt-get install libx11-dev libgl1-mesa-dev libudev-dev libfreetype6-dev libopenal-dev libflac-dev libvorbis-dev
    - sudo aptitude install x11-xserver-utils -y
    - sudo apt install libavcodec-dev libavformat-dev libswscale-dev -y
    - sudo apt-get install xorg-dev -y
##################################################



 
  #- export TESSERACT_PKG=$TESSERACT_INSTALL/lib/pkgconfig
  #- export LD_LIBRARY_PATH=$TESSERACT_INSTALL/lib:$LD_LIBRARY_PATH
  #- export PKG_CONFIG_PATH=$TESSERACT_PKG:$PKG_CONFIG_PATH
  #- wget -O - https://github.com/nijel/tesseract-ocr-build/releases/download/$TESSERACT_VERSION/tesseract.tar.xz | tar -C $HOME -xJf -
    - ls
    
 # - git clone https://github.com/microsoft/vcpkg
 #- cd vcpkg
 # - wget -c https://stasg.ru/tv/vcpkg-export-20201130-003734.zip
 # - unzip vcpkg-export-20201130-003734.zip


  #- cd home/travis/build/s-grig/projekt
    - mkdir sfml
    - cd sfml
    - wget https://www.sfml-dev.org/files/SFML-2.5.1-sources.zip
    - unzip SFML-2.5.1-sources.zip
    - cd SFML-2.5.1
    - cmake -DCMAKE_BUILD_TYPE=release -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=ON -DARCHIVE_INSTALL_DIR=. -G "Unix Makefiles"
    - sudo make && sudo make install
    - cd ..
    - cd ..
    - ls
   # - wget https://github.com/DanBloomberg/leptonica/releases/download/1.80.0/leptonica-1.80.0.tar.gz
   # - tar xzf leptonica-1.80.0.tar.gz
    # tar xzvf
   # - cd leptonica-1.80.0
  #- autoreconf --install --force
   # - ./configure
   # - sudo make install
   # - sudo make check
  #  - cd ..
   # - ls
   ################## tesseract + leptonica #####################################https://github.com/nijel/tesseract-ocr-build
    #- export TESSERACT_VERSION=4.1.0-1
    #- export TESSERACT_INSTALL=$HOME/.tesseract
    #- export TESSERACT_PKG=$TESSERACT_INSTALL/lib/pkgconfig
    #- export LD_LIBRARY_PATH=$TESSERACT_INSTALL/lib:$LD_LIBRARY_PATH
    #- export PKG_CONFIG_PATH=$TESSERACT_PKG:$PKG_CONFIG_PATH
    #- wget -O - https://github.com/nijel/tesseract-ocr-build/releases/download/$TESSERACT_VERSION/tesseract.tar.xz | tar -C $HOME -xJf -
    - tesseract --version
  ################## tesseract build ######################################
  
   # - git clone https://github.com/tesseract-ocr/tesseract.git
   ## #- cd tesseract
   ## #- ./autogen.sh
   # - export LIBLEPT_HEADERSDIR=/usr/local/include 
   # - ./configure --with-extra-libraries=/usr/local/lib
   # - sudo make && sudo make install
   # - sudo ldconfig
   # - cd ..

   ### - mkdir build && cd build
   ### - cmake ../
   ### - cmake --build .
    #- sudo make install
   ### - cd ..
   ###- cd ..
  
  ###- make training
  ###- sudo make training-install
   
  ##- 
    - ls

  
  #  - export TESSDATA_PREFIX=/home/travis/build/s-grig/projekt/tesseract/
  #- export TESSDATA_PREFIX=/usr/local/share/    #/usr/local/share/tessdata
  #- export Tesseract_DIR=/home/travis/build/s-grig/projekt/
  #- export TESSDATA_PREFIX="/home/travis/build/s-grig/projekt/tesseract/tessdata" 
  
   # - pkg-config --cflags --libs tesseract 
    - tesseract --version
  #  "-DCMAKE_PREFIX_PATH=/home/travis/build/s-grig/projekt/tesseract/cmake/"
    - find / -name  "*onfig.cmake" -print 2>/dev/null
    - find  / -name "LeptonicaConfig*" -print 2>/dev/null
    - find  / -name "TesseractConfig*" -print 2>/dev/null
    - find  / -name "libtesseract" -print 2>/dev/null
    
  ##- tree
  ##- tree -P '*esseract*' --prune
  
  #- cmake .. "-DCMAKE_PREFIX_PATH=/home/travis/build/s-grig/projekt/tesseract/cmake/templates/"
  # "-DCMAKE_PREFIX_PATH=/home/travis/build/s-grig/projekt/tesseract/"
  #cmake -Draspicam_DIR=<dir>
  #  "-DTesseract_DIR=/home/travis/build/s-grig/projekt/tesseract"
    - mkdir build && cd build
    - cmake ..
    - cmake --build .
    - echo "Main application testing is done"
  



 #  -DCMAKE_PREFIX_PATH=/usr/local/share/
 # cmake -DTesseract_DIR=/home/travis/build/s-grig/projekt/leptonica-1.80.0/tesseract_s/tesseract/cmake/templates